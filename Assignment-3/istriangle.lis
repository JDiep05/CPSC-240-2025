     1                                  global istriangle
     2                                  
     3                                  true equ 1
     4                                  false equ 0
     5                                  
     6                                  segment .data
     7                                      ; This segment is empty
     8                                  
     9                                  segment .bss
    10                                      ; This segment is empty
    11                                  
    12                                  segment .text
    13                                  
    14                                  istriangle:
    15 00000000 55                      push rbp
    16 00000001 4889E5                  mov rbp, rsp
    17 00000004 4883EC20                sub rsp, 32             ; Allocating 32 bytes for sides argument
    18 00000008 F20F110424              movsd [rsp], xmm0
    19 0000000D F20F114C2408            movsd [rsp+8], xmm1
    20 00000013 F20F11542410            movsd [rsp+16], xmm2
    21                                  
    22                                  ; Check triangle inequality: side_1 + side_2 > side_3
    23 00000019 F20F58C1                addsd xmm0, xmm1        ; xmm0 = (side_1) + side_2
    24 0000001D 660F2EC2                ucomisd xmm0, xmm2      ; Compare (side_1 + side_2) with side_3
    25 00000021 7627                    jbe not_triangle        ; If (side_1 + side_2) <= side_3, not a triangle
    26                                  
    27                                  ; Check side_1 + side_3 > side_2
    28 00000023 F20F100424              movsd xmm0, [rsp]       ; Reload side_1 (assuming it was passed on the stack)
    29 00000028 F20F58C2                addsd xmm0, xmm2        ; xmm0 = side_1 + side_3
    30 0000002C 660F2EC1                ucomisd xmm0, xmm1      ; Compare (side_1 + side_3) with side_2
    31 00000030 7618                    jbe not_triangle        ; If (side_1 + side_3) <= side_2, not a triangle
    32                                  
    33                                  ; Check side_2 + side_3 > side_1
    34 00000032 F20F10442408            movsd xmm0, [rsp + 8]   ; Reload side_2 (assuming it was passed on the stack)
    35 00000038 F20F58C2                addsd xmm0, xmm2        ; xmm0 = side_2 + side_3
    36 0000003C 660F2E0424              ucomisd xmm0, [rsp]     ; Compare (side_2 + side_3) with side_1
    37 00000041 7607                    jbe not_triangle        ; If (side_2 + side_3) <= side_1, not a triangle
    38                                  
    39                                  ; If all checks pass, it's a valid triangle
    40 00000043 B801000000              mov rax, true
    41 00000048 EB07                    jmp exit                ; Jump to exit block to return back to manager.asm
    42                                  
    43                                  not_triangle:
    44                                  ; If any check fails, it's not a valid triangle
    45 0000004A B800000000              mov rax, false
    46 0000004F EB00                    jmp exit                ; Jump to exit block to return back to manager.asm
    47                                  
    48                                  exit:
    49                                  ; Restore non-volatile registers
    50 00000051 4883C420                add rsp, 32             ; Deallocate bytes for local variables
    51 00000055 5D                      pop rbp
    52 00000056 C3                      ret
