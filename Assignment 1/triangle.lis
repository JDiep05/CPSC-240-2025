     1                                  ;*******************************************************************************************************************************
     2                                  ; Program name: "Triangle". This program calculates the third side of a triangle with two sides and an angle of a triangle based on user input
     3                                  ; Copyright (C) 2025  Jonthan Diep                                                                                             *
     4                                  ;                                                                                                                              *
     5                                  ; This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License    *
     6                                  ; as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.        *
     7                                  ; This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty  *
     8                                  ; of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.                *
     9                                  ; You should have received a copy of the GNU General Public License along with this program.  If not, see                      *
    10                                  ; <https://www.gnu.org/licenses/>.                                                                                             *
    11                                  ;*******************************************************************************************************************************
    12                                  
    13                                  
    14                                  
    15                                  ;========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1=========2=========3**
    16                                  ; Author information
    17                                  ;   Author name : Jonathan Diep
    18                                  ;   Author email: jonathon.dieppp@csu.fullerton.edu
    19                                  ;   CWID : 884973462
    20                                  ;   Class: 240-03 Section 03
    21                                  ; Program Information
    22                                  ;   Program Name: Triangle
    23                                  ;   Programming language: One module in C, one in X86, and one in bash.
    24                                  ;   Date program began: 2025-Feb-06
    25                                  ;   Date of last update: 2025-Feb-08
    26                                  ;   Files in this program: geometry.c, triangle.asm, run.sh.
    27                                  ;   Testing: Alpha testing completed. All functions are correct.
    28                                  ;   Status: Ready for release to customers
    29                                  ;
    30                                  ;Purpose
    31                                  ;   This program is a calculator for finding the third side of a triangle based on user input
    32                                  ;
    33                                  ;This file:
    34                                  ;   File name: triangle.asm
    35                                  ;   Language: X86-64
    36                                  ;   Max page width: 124 columns
    37                                  ;   Assemble (standard): nasm -f elf64 -l triangle.lis -o triangle.o triangle.asm
    38                                  ;   Assemble (debug): nasm -f elf64 -gdwarf -l triangle.lis -o triangle.o calculatetriangle.asm
    39                                  ;   Optimal print specification: Landscape, 7 points, monospace, 8Â½x11 paper
    40                                  ;   Prototype of this function: extern double triangle();
    41                                  ; 
    42                                  ;
    43                                  ;
    44                                  ;
    45                                  ;========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1=========2=========3**
    46                                  
    47                                  
    48                                  
    49                                  ;declaration
    50                                  
    51                                  extern printf
    52                                  
    53                                  extern scanf
    54                                  
    55                                  extern fgets
    56                                  
    57                                  extern stdin
    58                                  
    59                                  extern strlen
    60                                  
    61                                  extern cos
    62                                  
    63                                  global triangle
    64                                  
    65                                  string_size equ 48   ; Assign string_size with 48
    66 00000000 182D4454FB210940        pi dq 3.141592653589793238462643383279502884197
    67 00000008 0000000000000040        two dq 2.0
    68 00000010 0000000000806640        straight dq 180.0
    69                                  
    70                                  
    71                                  segment .data
    72                                  ;declared initialized arrays
    73                                  
    74 00000000 0A506C656173652065-     prompt_for_last_name db 10, "Please enter your last name: ", 0
    74 00000009 6E74657220796F7572-
    74 00000012 206C617374206E616D-
    74 0000001B 653A2000           
    75 0000001F 0A506C656173652065-     prompt_for_title db 10, "Please enter your title (Mr., Ms., Dr., Officer, Sergant, etc: ", 0
    75 00000028 6E74657220796F7572-
    75 00000031 207469746C6520284D-
    75 0000003A 722E2C204D732E2C20-
    75 00000043 44722E2C204F666669-
    75 0000004C 6365722C2053657267-
    75 00000055 616E742C206574633A-
    75 0000005E 2000               
    76                                  
    77 00000060 0A506C656173652065-     prompt_trig_sides db 10, "Please enter the two sides of the triangle seperated by ws: ", 0
    77 00000069 6E7465722074686520-
    77 00000072 74776F207369646573-
    77 0000007B 206F66207468652074-
    77 00000084 7269616E676C652073-
    77 0000008D 657065726174656420-
    77 00000096 62792077733A2000   
    78 0000009E 256C6620256C6600        side_format db "%lf %lf", 0
    79 000000A6 0A506C656173652065-     prompt_trig_angle db 10, "Please enter the angle in degrees between the two sides of the triangle: ", 0
    79 000000AF 6E7465722074686520-
    79 000000B8 616E676C6520696E20-
    79 000000C1 646567726565732062-
    79 000000CA 65747765656E207468-
    79 000000D3 652074776F20736964-
    79 000000DC 6573206F6620746865-
    79 000000E5 20747269616E676C65-
    79 000000EE 3A2000             
    80 000000F1 256C6600                angle_format db "%lf", 0
    81 000000F5 0A546865206C656E67-     result_side3 db 10, "The length of the third side is %.9lf units", 10, 0   ; Rounds the float by 9 decimal places
    81 000000FE 7468206F6620746865-
    81 00000107 207468697264207369-
    81 00000110 646520697320252E39-
    81 00000119 6C6620756E6974730A-
    81 00000122 00                 
    82                                  
    83 00000123 0A506C656173652065-     msg db 10, "Please enjoy your triangle %s %s.", 10, 0
    83 0000012C 6E6A6F7920796F7572-
    83 00000135 20747269616E676C65-
    83 0000013E 2025732025732E0A00 
    84                                  
    85                                  
    86                                  segment .bss
    87                                  ;declared empty arrays
    88                                  
    89                                  align 64
    90 00000000 <res 00000340>          backup_storage_area resb 832
    91                                  
    92 00000340 <res 00000030>          last_name resb string_size   ; Reserving 48 byte for string input
    93 00000370 <res 00000030>          title_name resb string_size   ; 48 byte is optimal for flexibility
    94                                  
    95 000003A0 <res 00000008>          side_1 resq 1   ; Reserving 1 byte for double input
    96 000003A8 <res 00000008>          side_2 resq 1
    97 000003B0 <res 00000008>          angle resq 1
    98                                  
    99                                  segment .text
   100                                  
   101                                  triangle:
   102                                  
   103                                  ;backup GPRs
   104 00000018 55                      push rbp
   105 00000019 4889E5                  mov rbp, rsp
   106 0000001C 53                      push rbx
   107 0000001D 51                      push rcx
   108 0000001E 52                      push rdx
   109 0000001F 57                      push rdi
   110 00000020 56                      push rsi
   111 00000021 4150                    push r8
   112 00000023 4151                    push r9
   113 00000025 4152                    push r10
   114 00000027 4153                    push r11
   115 00000029 4154                    push r12
   116 0000002B 4155                    push r13
   117 0000002D 4156                    push r14
   118 0000002F 4157                    push r15
   119 00000031 9C                      pushf
   120                                  
   121                                  ;backup other registers
   122 00000032 B807000000              mov rax, 7
   123 00000037 B800000000              mov rax, 0
   124 0000003C 0FAE2425[00000000]      xsave [backup_storage_area]
   125                                  
   126                                  ;output prompt for user input's last name
   127 00000044 B800000000              mov rax, 0
   128 00000049 48BF-                   mov rdi, prompt_for_last_name
   128 0000004B [0000000000000000] 
   129 00000053 E8(00000000)            call printf
   130                                  
   131                                  ;input for user's last name
   132 00000058 B800000000              mov rax, 0
   133 0000005D 48BF-                   mov rdi, last_name
   133 0000005F [4003000000000000] 
   134 00000067 BE30000000              mov rsi, string_size
   135 0000006C 488B1425[00000000]      mov rdx, [stdin]
   136 00000074 E8(00000000)            call fgets
   137                                  
   138                                  ;remove newline from fgets, replacing with null
   139 00000079 B800000000              mov rax, 0
   140 0000007E 48BF-                   mov rdi, last_name
   140 00000080 [4003000000000000] 
   141 00000088 E8(00000000)            call strlen   ; rax = length of last_name + newline
   142 0000008D C680[3F030000]00        mov [last_name+rax-1], byte 0   ; rax points to the index of last_name based on the value it holds 
   143                                                                  ; and replaces it with null
   144                                  
   145                                  ;output prompt for user input's title
   146 00000094 B800000000              mov rax, 0
   147 00000099 48BF-                   mov rdi, prompt_for_title
   147 0000009B [1F00000000000000] 
   148 000000A3 E8(00000000)            call printf
   149                                  
   150                                  ;input for user's title
   151 000000A8 B800000000              mov rax, 0
   152 000000AD 48BF-                   mov rdi, title_name
   152 000000AF [7003000000000000] 
   153 000000B7 BE30000000              mov rsi, string_size
   154 000000BC 488B1425[00000000]      mov rdx, [stdin]
   155 000000C4 E8(00000000)            call fgets
   156                                  
   157                                  ;remove newline from fgets, replacing with null
   158 000000C9 B800000000              mov rax, 0
   159 000000CE 48BF-                   mov rdi, title_name
   159 000000D0 [7003000000000000] 
   160 000000D8 E8(00000000)            call strlen
   161 000000DD C680[6F030000]00        mov [title_name+rax-1], byte 0
   162                                  
   163                                  input_sides:
   164                                  ;prompt for user's input for the two sides of the triangle
   165 000000E4 B800000000              mov rax, 0
   166 000000E9 48BF-                   mov rdi, prompt_trig_sides
   166 000000EB [6000000000000000] 
   167 000000F3 E8(00000000)            call printf
   168                                  
   169                                  ;input for user's two sides of the triangle as a string variable
   170 000000F8 48BF-                   mov rdi, side_format
   170 000000FA [9E00000000000000] 
   171 00000102 48BE-                   mov rsi, side_1
   171 00000104 [A003000000000000] 
   172 0000010C 48BA-                   mov rdx, side_2
   172 0000010E [A803000000000000] 
   173 00000116 E8(00000000)            call scanf
   174                                  
   175                                  ; Move the input values into xmm registers
   176 0000011B F2440F103425-           movsd xmm14, [side_1]   ; Move first side into xmm14 (Dereference to get the value in side_1)
   176 00000121 [A0030000]         
   177 00000125 F2440F103C25-           movsd xmm15, [side_2]   ; Move second side into xmm15 (Dereference to get the value in side_2)
   177 0000012B [A8030000]         
   178                                  
   179                                  input_angle:
   180                                  ; Prompt for user's input for angle between the two sides of the triangle
   181 0000012F B800000000              mov rax, 0
   182 00000134 48BF-                   mov rdi, prompt_trig_angle
   182 00000136 [A600000000000000] 
   183 0000013E E8(00000000)            call printf
   184                                  
   185                                  ; Input for user's triangle angle
   186 00000143 48BF-                   mov rdi, angle_format
   186 00000145 [F100000000000000] 
   187 0000014D 48BE-                   mov rsi, angle
   187 0000014F [B003000000000000] 
   188 00000157 E8(00000000)            call scanf
   189                                  
   190                                  ; Move the input values into xmm registers
   191 0000015C F2440F102C25-           movsd xmm13, [angle]   ; Move first angle into xmm13 (Dereference to get the value in angle)
   191 00000162 [B0030000]         
   192                                  
   193                                  input_calculate:
   194                                  ; Setting values for cos(angle) (calculation: 2(side_1)(side_2)*cos(angle))
   195 00000166 F2450F10E6              movsd xmm12, xmm14   ; Moving side_1 into xmm12
   196 0000016B F2450F59E7              mulsd xmm12, xmm15   ; Multiplying side_1 with side_2 (a * b)
   197 00000170 F2440F592425-           mulsd xmm12, [two]   ; Multiplying two(2.0) with xmm12 (2 * (a*b))
   197 00000176 [08000000]         
   198                                  
   199                                  ; Convert angle in Degrees into Radians
   200 0000017A F2440F592C25-           mulsd xmm13, [pi]   ; d = (d * 3.141592653589793238462643383279502884197)
   200 00000180 [00000000]         
   201 00000184 F2440F5E2C25-           divsd xmm13, [straight]   ; d = d/180
   201 0000018A [10000000]         
   202                                  
   203                                  ; Getting Cos value
   204 0000018E B801000000              mov rax, 1
   205 00000193 F2410F10C5              movsd xmm0, xmm13
   206 00000198 E8(00000000)            call cos   ; cos(d)
   207 0000019D F2440F10E8              movsd xmm13, xmm0
   208                                  
   209                                  ; Getting Squared of side_1
   210 000001A2 F2450F59F6              mulsd xmm14, xmm14   ; (a*a)
   211                                  
   212                                  ; Getting Squared of side_2
   213 000001A7 F2450F59FF              mulsd xmm15, xmm15   ; (b*b)
   214                                  
   215                                  ; Getting the value of the third side
   216 000001AC F2450F58F7              addsd xmm14, xmm15   ; a^2 + b^2
   217 000001B1 F2450F59EC              mulsd xmm13, xmm12   ; (2 *(a*b) * (cos(d)))
   218 000001B6 F2450F10DE              movsd xmm11, xmm14   ; c^2 = a^2 + b^2
   219 000001BB F2450F5CDD              subsd xmm11, xmm13   ; c^2 = a^2 + b^2 - (2 *(a*b) * (cos(d)))
   220 000001C0 F2450F51DB              sqrtsd xmm11, xmm11   ; c = sqrt(a^2 + b^2 - (2 *(a*b) * (cos(d))))
   221                                  
   222                                  ; Print third side
   223 000001C5 B801000000              mov rax, 1   ; Passing 1 float number
   224 000001CA F2410F10C3              movsd xmm0, xmm11
   225 000001CF 48BF-                   mov rdi, result_side3
   225 000001D1 [F500000000000000] 
   226 000001D9 E8(00000000)            call printf
   227                                  
   228                                  ; Print message
   229 000001DE B800000000              mov rax, 0
   230 000001E3 48BF-                   mov rdi, msg
   230 000001E5 [2301000000000000] 
   231 000001ED 48BE-                   mov rsi, title_name
   231 000001EF [7003000000000000] 
   232 000001F7 48BA-                   mov rdx, last_name
   232 000001F9 [4003000000000000] 
   233 00000201 E8(00000000)            call printf
   234                                  
   235                                  ; Move result to stack
   236 00000206 B800000000              mov rax, 0
   237 0000020B 6A00                    push qword 0
   238 0000020D F2440F111C24            movsd [rsp], xmm11
   239                                  
   240                                  ;Restore the values to non-GPRs
   241 00000213 B807000000              mov rax, 7
   242 00000218 BA00000000              mov rdx, 0
   243 0000021D 0FAE2C25[00000000]      xrstor [backup_storage_area]
   244                                  
   245                                  ;Send back side 3 length
   246 00000225 F20F100424              movsd xmm0, [rsp]    ; Move side_3 to xmm0
   247 0000022A 58                      pop rax   ; xmm0 is returned to the main function in the count variable
   248                                  
   249                                                      
   250                                  ; Restore the GPRs
   251 0000022B 9D                      popf
   252 0000022C 415F                    pop r15
   253 0000022E 415E                    pop r14
   254 00000230 415D                    pop r13
   255 00000232 415C                    pop r12
   256 00000234 415B                    pop r11
   257 00000236 415A                    pop r10
   258 00000238 4159                    pop r9
   259 0000023A 4158                    pop r8
   260 0000023C 5E                      pop rsi
   261 0000023D 5F                      pop rdi
   262 0000023E 5A                      pop rdx
   263 0000023F 59                      pop rcx
   264 00000240 5B                      pop rbx
   265 00000241 4889EC                  mov rsp, rbp
   266 00000244 5D                      pop rbp   ;Restore rbp to the base of the activation record of the caller program
   267 00000245 C3                      ret
